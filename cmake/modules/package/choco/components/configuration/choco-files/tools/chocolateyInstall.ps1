# https://chatgpt.com/c/6751b149-4760-8004-8135-8ce4a5ef71ef

file(WRITE ${CONFIG_FILE_PATH} "$packageName = '${PROJECT_NAME}'\n")
file(APPEND ${CONFIG_FILE_PATH} "$packageArgs = @{\n")
file(APPEND ${CONFIG_FILE_PATH} "\tpackageName    = 'YourPackageName'\n")
file(APPEND ${CONFIG_FILE_PATH} "\tfileType       = 'exe'\n")
file(APPEND ${CONFIG_FILE_PATH} "\tfile           = "$toolsDir\yourinstaller.exe"\n")
file(APPEND ${CONFIG_FILE_PATH} "\tsilentArgs     = "/S"\n")
file(APPEND ${CONFIG_FILE_PATH} "\tvalidExitCodes = @(0, 3010, 1641)\n")
file(APPEND ${CONFIG_FILE_PATH} "\n")
file(APPEND ${CONFIG_FILE_PATH} "\n")
file(APPEND ${CONFIG_FILE_PATH} "\n")

file(APPEND ${CONFIG_FILE_PATH} "$displayName = '${PROJECT_NAME}'\n")
file(APPEND ${CONFIG_FILE_PATH} "$manufacturer = '${PROJECT_ORGANIZATION}'\n")
file(APPEND ${CONFIG_FILE_PATH} "$version = '${VERSION_SEMVER}'\n")
file(APPEND ${CONFIG_FILE_PATH} "$uninstallString = 'choco uninstall $packageName -y'\n")

file(APPEND ${CONFIG_FILE_PATH} "\n")
file(APPEND ${CONFIG_FILE_PATH} "Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$packageName' -Name 'DisplayName' -Value $displayName\n")
file(APPEND ${CONFIG_FILE_PATH} "Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$packageName' -Name 'DisplayVersion' -Value $version\n")
file(APPEND ${CONFIG_FILE_PATH} "Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$packageName' -Name 'UninstallString' -Value $uninstallString\n")
file(APPEND ${CONFIG_FILE_PATH} "Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$packageName' -Name 'Publisher' -Value $manufacturer\n")
file(APPEND ${CONFIG_FILE_PATH} "\n")

file(APPEND ${CONFIG_FILE_PATH} "$toolsDir = $(Split-Path -parent $MyInvocation.MyCommand.Definition)\n")
file(APPEND ${CONFIG_FILE_PATH} "$packageNameWithBin = Join-Path -Path $packageName -ChildPath 'bin'\n")
file(APPEND ${CONFIG_FILE_PATH} "$installDir = Join-Path -Path $env:ProgramFiles -ChildPath $packageNameWithBin\n")
file(APPEND ${CONFIG_FILE_PATH} "\n")
file(APPEND ${CONFIG_FILE_PATH} "if (-not (Test-Path $installDir)){\n")
file(APPEND ${CONFIG_FILE_PATH} "\tNew-Item -Path $installDir -ItemType Directory | Out-Null\n")
file(APPEND ${CONFIG_FILE_PATH} "}\n")
file(APPEND ${CONFIG_FILE_PATH} "\n")

if(${APP_ARCH} STREQUAL ${ARCH_ALL})
file(APPEND ${CONFIG_FILE_PATH} "$exeName = ''\n")
file(APPEND ${CONFIG_FILE_PATH} "if ($env:PROCESSOR_ARCHITECTURE -eq '${CHOCO_ARCH_X86}') {\n")
file(APPEND ${CONFIG_FILE_PATH} "\t$exeName = '${APP_NAME}-${ARCH_X86}${EXT}'\n")
file(APPEND ${CONFIG_FILE_PATH} "} elseif ($env:PROCESSOR_ARCHITECTURE -eq '${CHOCO_ARCH_X86_64}') {\n")
file(APPEND ${CONFIG_FILE_PATH} "\t$exeName = '${APP_NAME}-${ARCH_X86_64}${EXT}'\n")
file(APPEND ${CONFIG_FILE_PATH} "} elseif ($env:PROCESSOR_ARCHITECTURE -eq '${CHOCO_ARCH_ARM64}') {\n")
file(APPEND ${CONFIG_FILE_PATH} "\t$exeName = '${APP_NAME}-${ARCH_ARM64}${EXT}'\n")
file(APPEND ${CONFIG_FILE_PATH} "} else {\n")
file(APPEND ${CONFIG_FILE_PATH} "\tthrow 'Unsupported architecture: $env:PROCESSOR_ARCHITECTURE'\n")
file(APPEND ${CONFIG_FILE_PATH} "}\n")
file(APPEND ${CONFIG_FILE_PATH} "\n")
file(APPEND ${CONFIG_FILE_PATH} "\n")
else()
file(APPEND ${CONFIG_FILE_PATH} "$exeName = '${APP_NAME}${EXT}'\n")
endif()
file(APPEND ${CONFIG_FILE_PATH} "\n")
file(APPEND ${CONFIG_FILE_PATH} "$sourceExe = Join-Path -Path $toolsDir -ChildPath $exeName\n")
file(APPEND ${CONFIG_FILE_PATH} "$destinationExe = Join-Path -Path $installDir -ChildPath '${APP_NAME}${EXT}'\n")
file(APPEND ${CONFIG_FILE_PATH} "Copy-Item -Path $sourceExe -Destination $destinationExe -Force\n")
file(APPEND ${CONFIG_FILE_PATH} "Write-Output 'Installed appropriate executable for architecture: ${APP_ARCH}'\n")


file(APPEND ${CONFIG_FILE_PATH} "\n")
file(APPEND ${CONFIG_FILE_PATH} "$appDataDir = [System.IO.Path]::Combine($env:LOCALAPPDATA, $packageName)\n")
file(APPEND ${CONFIG_FILE_PATH} "$subFolders = @('data', 'logs', 'config', 'cache')\n")
file(APPEND ${CONFIG_FILE_PATH} "foreach ($subFolder in $subFolders) {\n")
file(APPEND ${CONFIG_FILE_PATH} "\t$subFolderPath = [System.IO.Path]::Combine($appDataDir, $subFolder)\n")
file(APPEND ${CONFIG_FILE_PATH} "\tif (-not (Test-Path $subFolderPath)) {\n")
file(APPEND ${CONFIG_FILE_PATH} "\t\tNew-Item -Path $subFolderPath -ItemType Directory | Out-Null\n")
file(APPEND ${CONFIG_FILE_PATH} "\t\tWrite-Output 'Created $subFolder folder at $subFolderPath'\n")
file(APPEND ${CONFIG_FILE_PATH} "\t}\n")
file(APPEND ${CONFIG_FILE_PATH} "}\n")
file(APPEND ${CONFIG_FILE_PATH} "\n")
file(APPEND ${CONFIG_FILE_PATH} "Write-Output 'AppData folders created successfully.'\n")


file(APPEND ${CONFIG_FILE_PATH} "\n")
file(APPEND ${CONFIG_FILE_PATH} "$existingPath = [System.Environment]::GetEnvironmentVariable('Path', [System.EnvironmentVariableTarget]::Machine)\n")
file(APPEND ${CONFIG_FILE_PATH} "if ($existingPath -notlike '*$installDir*') {\n")
file(APPEND ${CONFIG_FILE_PATH} "\t[System.Environment]::SetEnvironmentVariable('Path', '$existingPath;$installDir', [System.EnvironmentVariableTarget]::Machine)\n")
file(APPEND ${CONFIG_FILE_PATH} "\tWrite-Output 'Added installation directory to system PATH.'\n")
file(APPEND ${CONFIG_FILE_PATH} "}\n")



